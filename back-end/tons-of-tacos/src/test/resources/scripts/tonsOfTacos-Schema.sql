DROP TABLE IF EXISTS order_item;

DROP TABLE IF EXISTS orders;

DROP TABLE IF EXISTS menu_item;

DROP TABLE IF EXISTS customer;


CREATE TABLE customer(
id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
email VARCHAR(40) NOT NULL,
name VARCHAR(40) NOT NULL,
orders JSON,
phone_number VARCHAR(12) NOT NULL,

PRIMARY KEY(id)
);

CREATE TABLE orders(
id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
created TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
customer_id INTEGER NOT NULL,
order_data JSON,
order_total DECIMAL(19, 2) NOT NULL,
order_UUID VARCHAR(255) NOT NULL,
status VARCHAR(6) DEFAULT 'open',
PRIMARY KEY(id),
FOREIGN KEY(customer_id) REFERENCES customer(id)
);

CREATE TABLE menu_item(
id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
category VARCHAR(30),
description VARCHAR(255),
item_name VARCHAR(30),
item_size VARCHAR(100),
img_url VARCHAR(255),
unit_price DECIMAL(19, 2),
PRIMARY KEY(id)
);

CREATE INDEX ITEM_NAMEX ON menu_item(item_name);
CREATE INDEX ITEM_IDX ON menu_item(id);


CREATE TABLE cart(
id INTEGER GENERATED BY DEFAULT AS IDENTITY NOT NULL,
menu_item_id INTEGER NOT NULL,
menu_item_name VARCHAR(30) NOT NULL,
cart_uuid VARCHAR(255) NOT NULL, 
quantity INTEGER(2) NOT NULL,
total DECIMAL(19, 2),
PRIMARY KEY(id),
CONSTRAINT fk_menuItemName_cartItemName FOREIGN KEY (menu_item_name) 
REFERENCES menu_item(item_name),
CONSTRAINT fk_menuItemId_cartItemId FOREIGN KEY (menu_item_id) REFERENCES 
menu_item(id)
);




